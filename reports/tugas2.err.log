Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.9/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.9/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import psycopg2
import pandas as pd
# Connection parameters, yours will be different
param_dic = {
    "host"      : "tiny.db.elephantsql.com",
    "database"  : "hlxmmpdn",
    "user"      : "hlxmmpdn",
    "password"  : "RBeXAT4dZFTjaGnbngwFqhMnqtcyJI7a"
}
def connect(params_dic):
    """ Connect to the PostgreSQL database server """
    conn = None
    try:
        # connect to the PostgreSQL server
        print('Connecting to the PostgreSQL database...')
        conn = psycopg2.connect(**params_dic)
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
        sys.exit(1) 
    print("Connection successful")
    return conn

def postgresql_to_dataframe(conn, select_query, column_names):
    """
    Tranform a SELECT query into a pandas dataframe
    """
    cursor = conn.cursor()
    try:
        cursor.execute(select_query)
    except (Exception, psycopg2.DatabaseError) as error:
        print("Error: %s" % error)
        cursor.close()
        return 1
    
    # Naturally we get a list of tupples
    tupples = cursor.fetchall()
    cursor.close()
    
    # We just need to turn it into a pandas dataframe
    df = pd.DataFrame(tupples, columns=column_names)
    return df

# Connect to the database
conn = connect(param_dic)

column_names = ['sepal_length','sepal_width','petal_length','petal_width','variety']

df_postEle = postgresql_to_dataframe(conn, "select sepal_width from iris_data", column_names)
df_postEle
------------------

[0;31m[0m
[0;31mAssertionError[0mTraceback (most recent call last)
[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/internals/construction.py[0m in [0;36m_finalize_columns_and_data[0;34m(content, columns, dtype)[0m
[1;32m    981[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 982[0;31m         [0mcolumns[0m [0;34m=[0m [0m_validate_or_indexify_columns[0m[0;34m([0m[0mcontents[0m[0;34m,[0m [0mcolumns[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    983[0m     [0;32mexcept[0m [0mAssertionError[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/internals/construction.py[0m in [0;36m_validate_or_indexify_columns[0;34m(content, columns)[0m
[1;32m   1029[0m             [0;31m# caller's responsibility to check for this...[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1030[0;31m             raise AssertionError(
[0m[1;32m   1031[0m                 [0;34mf"{len(columns)} columns passed, passed data had "[0m[0;34m[0m[0;34m[0m[0m

[0;31mAssertionError[0m: 5 columns passed, passed data had 1 columns

The above exception was the direct cause of the following exception:

[0;31mValueError[0mTraceback (most recent call last)
[0;32m<ipython-input-2-0dcc0f40de53>[0m in [0;36m<cell line: 48>[0;34m()[0m
[1;32m     46[0m [0mcolumn_names[0m [0;34m=[0m [0;34m[[0m[0;34m'sepal_length'[0m[0;34m,[0m[0;34m'sepal_width'[0m[0;34m,[0m[0;34m'petal_length'[0m[0;34m,[0m[0;34m'petal_width'[0m[0;34m,[0m[0;34m'variety'[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m     47[0m [0;34m[0m[0m
[0;32m---> 48[0;31m [0mdf_postEle[0m [0;34m=[0m [0mpostgresql_to_dataframe[0m[0;34m([0m[0mconn[0m[0;34m,[0m [0;34m"select sepal_width from iris_data"[0m[0;34m,[0m [0mcolumn_names[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     49[0m [0mdf_postEle[0m[0;34m[0m[0;34m[0m[0m

[0;32m<ipython-input-2-0dcc0f40de53>[0m in [0;36mpostgresql_to_dataframe[0;34m(conn, select_query, column_names)[0m
[1;32m     38[0m [0;34m[0m[0m
[1;32m     39[0m     [0;31m# We just need to turn it into a pandas dataframe[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 40[0;31m     [0mdf[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mDataFrame[0m[0;34m([0m[0mtupples[0m[0;34m,[0m [0mcolumns[0m[0;34m=[0m[0mcolumn_names[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     41[0m     [0;32mreturn[0m [0mdf[0m[0;34m[0m[0;34m[0m[0m
[1;32m     42[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/frame.py[0m in [0;36m__init__[0;34m(self, data, index, columns, dtype, copy)[0m
[1;32m    719[0m                         [0;31m# ndarray], Index, Series], Sequence[Any]]"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    720[0m                         [0mcolumns[0m [0;34m=[0m [0mensure_index[0m[0;34m([0m[0mcolumns[0m[0;34m)[0m  [0;31m# type: ignore[arg-type][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 721[0;31m                     arrays, columns, index = nested_data_to_arrays(
[0m[1;32m    722[0m                         [0;31m# error: Argument 3 to "nested_data_to_arrays" has incompatible[0m[0;34m[0m[0;34m[0m[0m
[1;32m    723[0m                         [0;31m# type "Optional[Collection[Any]]"; expected "Optional[Index]"[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/internals/construction.py[0m in [0;36mnested_data_to_arrays[0;34m(data, columns, index, dtype)[0m
[1;32m    517[0m         [0mcolumns[0m [0;34m=[0m [0mensure_index[0m[0;34m([0m[0mdata[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0m_fields[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    518[0m [0;34m[0m[0m
[0;32m--> 519[0;31m     [0marrays[0m[0;34m,[0m [0mcolumns[0m [0;34m=[0m [0mto_arrays[0m[0;34m([0m[0mdata[0m[0;34m,[0m [0mcolumns[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    520[0m     [0mcolumns[0m [0;34m=[0m [0mensure_index[0m[0;34m([0m[0mcolumns[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    521[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/internals/construction.py[0m in [0;36mto_arrays[0;34m(data, columns, dtype)[0m
[1;32m    881[0m         [0marr[0m [0;34m=[0m [0m_list_to_arrays[0m[0;34m([0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    882[0m [0;34m[0m[0m
[0;32m--> 883[0;31m     [0mcontent[0m[0;34m,[0m [0mcolumns[0m [0;34m=[0m [0m_finalize_columns_and_data[0m[0;34m([0m[0marr[0m[0;34m,[0m [0mcolumns[0m[0;34m,[0m [0mdtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    884[0m     [0;32mreturn[0m [0mcontent[0m[0;34m,[0m [0mcolumns[0m[0;34m[0m[0;34m[0m[0m
[1;32m    885[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.9/dist-packages/pandas/core/internals/construction.py[0m in [0;36m_finalize_columns_and_data[0;34m(content, columns, dtype)[0m
[1;32m    983[0m     [0;32mexcept[0m [0mAssertionError[0m [0;32mas[0m [0merr[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    984[0m         [0;31m# GH#26429 do not raise user-facing AssertionError[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 985[0;31m         [0;32mraise[0m [0mValueError[0m[0;34m([0m[0merr[0m[0;34m)[0m [0;32mfrom[0m [0merr[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    986[0m [0;34m[0m[0m
[1;32m    987[0m     [0;32mif[0m [0mlen[0m[0;34m([0m[0mcontents[0m[0;34m)[0m [0;32mand[0m [0mcontents[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mdtype[0m [0;34m==[0m [0mnp[0m[0;34m.[0m[0mobject_[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: 5 columns passed, passed data had 1 columns
ValueError: 5 columns passed, passed data had 1 columns

